// <auto-generated />
using AssignmentJsonPatch.ApplicationContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssignmentJsonPatch.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240903083118_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssignmentJsonPatch.Entity.PropteryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("propteryEntities");
                });

            modelBuilder.Entity("AssignmentJsonPatch.Entity.PropteryEntity", b =>
                {
                    b.OwnsOne("AssignmentJsonPatch.Entity.AddressEntity", "Address", b1 =>
                        {
                            b1.Property<int>("PropteryEntityId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PropteryEntityId");

                            b1.ToTable("propteryEntities");

                            b1.WithOwner()
                                .HasForeignKey("PropteryEntityId");
                        });

                    b.OwnsOne("AssignmentJsonPatch.Entity.OwnerDetails", "Owner", b1 =>
                        {
                            b1.Property<int>("PropteryEntityId")
                                .HasColumnType("int");

                            b1.Property<string>("ContactNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PropteryEntityId");

                            b1.ToTable("propteryEntities");

                            b1.WithOwner()
                                .HasForeignKey("PropteryEntityId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Owner")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
